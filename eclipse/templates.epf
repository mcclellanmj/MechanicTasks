# @title Templates
# @description Custom Templates
# @task_type RECONCILE 
#
# Created by the Workspace Mechanic Preference Recorder
#Tue May 28 16:57:54 CDT 2013
file_export_version=3.0
/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="swt-statements" deleted\="true" description\="new GridLayout for a Composites" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.swt.gridlayout" name\="GridLayout">${gridLayout\:newType(org.eclipse.swt.layout.GridLayout)} ${layout\:newName(org.eclipse.swt.layout.GridLayout)} \= new ${gridLayout}(${columns\:link(1, 2, 3, 4, 5)}, ${width\:link(false, true)});\r\n${layout}.marginWidth \= ${marginW\:link(5, 0)};\r\n${layout}.marginHeight \= ${marginH\:link(5, 0)};\r\n${layout}.verticalSpacing \= ${vSpacing\:link(0, 5)};\r\n${layout}.horizontalSpacing \= ${hSpacing\:link(0, 5)};\r\n${parent\:var(org.eclipse.swt.widgets.Composite)}.setLayout(${layout});\r\n${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="true" description\="new GridData for a Control" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.swt.griddata" name\="GridData">${gridData\:newType(org.eclipse.swt.layout.GridData)} ${layoutData\:newName(org.eclipse.swt.layout.GridData)} \= new ${gridData}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(false, true)});\r\n${layoutData}.widthHint\= ${width\:link(SWT.DEFAULT)};\r\n${layoutData}.heightHint\= ${height\:link(SWT.DEFAULT)};\r\n${parent\:var(org.eclipse.swt.widgets.Control)}.setLayoutData(${layoutData});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="true" description\="new Group with GridLayout" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.swt.group" name\="Group">${groupType\:newType(org.eclipse.swt.widgets.Group)} ${group\:newName(org.eclipse.swt.widgets.Group)}\= new ${groupType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.SHADOW_ETCHED_IN, SWT.SHADOW_ETCHED_OUT, SWT.SHADOW_IN, SWT.SHADOW_OUT, SWT.SHADOW_NONE)});\r\n${group}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\r\n${group}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\r\n${group}.setText(${word_selection}${});\r\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="false" context\="java-statements" deleted\="false" description\="Quote Text" enabled\="true" name\="quotes">"${word_selection}"${cursor}</template><template autoinsert\="false" context\="java" deleted\="false" description\="Quote Text" enabled\="true" name\="&quot;">"${word_selection}"${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Wrap lines in runtime exception" enabled\="true" name\="wrapToRuntimeException">${precond\:import(com.google.common.base.Throwables)}&\#13;\r\ntry {&\#13;\r\n\t${line_selection}${cursor}&\#13;\r\n} catch(Exception ${exception_variable_name}) {&\#13;\r\n\tthrow Throwables.propagate(${exception_variable_name});&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Wrap selection in print" enabled\="true" name\="prw">System.out.println(${word_selection})${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Create print statement" enabled\="true" name\="println">System.out.println(${to_print});</template><template autoinsert\="true" context\="java" deleted\="false" description\="Private Inner Class" enabled\="true" name\="private class">private class ${class_name} {&\#13;\r\n\t${cursor}&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Create formatted String" enabled\="true" name\="format">String.format(${word_selection}${}, ${cursor});</template><template autoinsert\="true" context\="java" deleted\="false" description\="Guava check not null" enabled\="true" name\="Preconditions.checkNotNull">${\:import(com.google.common.base.Preconditions)}Preconditions.checkNotNull(${word_selection}, "${errorMsg}");${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Guava Check Argument" enabled\="true" name\="Preconditions.checkArgument">${\:import(com.google.common.base.Preconditions)}Preconditions.checkArgument(${expression}, "${errorMsg}");${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Guava check state" enabled\="true" name\="Preconditions.checkState">${\:import(com.google.common.base.Preconditions)}Preconditions.checkState(${expression}, "${errorMsg}");${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="close quietly" enabled\="true" name\="Preconditions.closeQuietly">${\:import(com.google.common.io.Closeables)}Closeables.closeQuietly(${closeable});${cursor}</template></templates>
